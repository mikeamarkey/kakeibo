enum TransactionType {
  DAILY
  INCOME
  EXPENSE
}

type User {
  name: String!
  email: String! @unique
}

type Transaction {
  category: Category
  createdAt: Int!
  date: Date
  month: String!
  name: String
  note: String
  order: Int
  price: Int!
  type: TransactionType!
  user: User!
}

type Category {
  color: String!
  name: String!
  order: Int
  user: User!
}

input SortInput {
  id: ID!
  order: Int!
}

input LocalTransactionInput {
  category: ID
  createdAt: Int!
  date: Date
  month: String!
  name: String
  note: String
  order: Int
  price: Int!
  type: TransactionType!
  user: ID!
}

type Query {
  getCategories: [Category!]!
  getTransactions: [Transaction!]!
  getTransactionsByMonth(month: String!): [Transaction!]!
  getTransactionsByType(type: TransactionType!): [Transaction!]!
  getUserByEmail(email: String!): User!
}

type Mutation {
  createTransactions(input: [LocalTransactionInput!]!): [Transaction!]! @resolver
  sortCategories(input: [SortInput!]!): [Category!]! @resolver
  sortTransactions(input: [SortInput!]!): [Transaction!]! @resolver
}
